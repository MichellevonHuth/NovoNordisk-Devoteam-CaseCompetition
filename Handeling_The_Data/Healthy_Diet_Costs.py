{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "path_to_files = \"/Users/davidbellenberg/Desktop/Case_Competition_2022/Data/\"\n",
    "df_all = pd.read_excel(path_to_files +\"Overweight and Obesity Data.xlsx\",sheet_name=\"BMI Children 2000-2016\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "#drop all entries without data about \n",
    "df_all_dropped = df_all[df_all['Obesity (Prevalence of BMI>2SD)'].notna()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Year</th>\n",
       "      <th>Age group</th>\n",
       "      <th>Mean BMI children</th>\n",
       "      <th>Obesity (Prevalence of BMI&gt;2SD)</th>\n",
       "      <th>Overweight (Prevalence of BMI&gt;1SD)</th>\n",
       "      <th>Underweight (Prevalence of BMI&lt;minus1SD)</th>\n",
       "      <th>Moderate &amp; severe underweight (Prevalence of BMI&lt;minus2SD)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>18.177642</td>\n",
       "      <td>0.029956</td>\n",
       "      <td>0.093371</td>\n",
       "      <td>0.443409</td>\n",
       "      <td>0.169714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>19.058986</td>\n",
       "      <td>0.078629</td>\n",
       "      <td>0.253145</td>\n",
       "      <td>0.115158</td>\n",
       "      <td>0.012628</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>19.688620</td>\n",
       "      <td>0.131096</td>\n",
       "      <td>0.305992</td>\n",
       "      <td>0.199569</td>\n",
       "      <td>0.059339</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>American Samoa</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>23.225984</td>\n",
       "      <td>0.292000</td>\n",
       "      <td>0.630934</td>\n",
       "      <td>0.007829</td>\n",
       "      <td>0.000728</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>20.247429</td>\n",
       "      <td>0.124867</td>\n",
       "      <td>0.355105</td>\n",
       "      <td>0.066026</td>\n",
       "      <td>0.008009</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Country    Year  Age group  Mean BMI children  \\\n",
       "0     Afghanistan  2016.0       12.0          18.177642   \n",
       "1         Albania  2016.0       12.0          19.058986   \n",
       "2         Algeria  2016.0       12.0          19.688620   \n",
       "3  American Samoa  2016.0       12.0          23.225984   \n",
       "4         Andorra  2016.0       12.0          20.247429   \n",
       "\n",
       "   Obesity (Prevalence of BMI>2SD)  Overweight (Prevalence of BMI>1SD)  \\\n",
       "0                         0.029956                            0.093371   \n",
       "1                         0.078629                            0.253145   \n",
       "2                         0.131096                            0.305992   \n",
       "3                         0.292000                            0.630934   \n",
       "4                         0.124867                            0.355105   \n",
       "\n",
       "   Underweight (Prevalence of BMI<minus1SD)  \\\n",
       "0                                  0.443409   \n",
       "1                                  0.115158   \n",
       "2                                  0.199569   \n",
       "3                                  0.007829   \n",
       "4                                  0.066026   \n",
       "\n",
       "   Moderate & severe underweight (Prevalence of BMI<minus2SD)  \n",
       "0                                           0.169714           \n",
       "1                                           0.012628           \n",
       "2                                           0.059339           \n",
       "3                                           0.000728           \n",
       "4                                           0.008009           "
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filter only 2016 years\n",
    "df_all_dropped_year = df_all_dropped[df_all_dropped[\"Year\"]==2016]\n",
    "\n",
    "#group the age categories away\n",
    "#df_grouped = df_all_dropped.groupby([\"Country\", \"Year\"]).mean()\n",
    "\n",
    "df_grouped = df_all_dropped_year.groupby([\"Country\"]).mean()\n",
    "\n",
    "df_grouped.to_csv(path_to_files +\"testedoverlapping.csv\")\n",
    "\n",
    "df_grouped_new = pd.read_csv(path_to_files +\"testedoverlapping.csv\") #.set_index(\"Country\")\n",
    "\n",
    "df_grouped_new.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "######THIS IS NOT NEEDE ANYMORE --> ABout population\n",
    "#import population data\n",
    "df_pop = pd.read_excel(path_to_files +\"WorldBank_Population Data_(2000-2020).xlsx\",sheet_name=\"Data\")\n",
    "\n",
    "#clean population Data \n",
    "df_pop = df_pop[df_pop['2016'].notna()]\n",
    "df_pop_year = df_pop[[\"Country Name\",\"2016\",\"Category\"]]\n",
    "df_pop_year_urban = df_pop_year.loc[(df_pop_year['Category'] == \"Urban population\") | (df_pop_year['Category'] == \"Rural population\")]\n",
    "df_pop_year_urban_grouped = df_pop_year_urban.groupby([\"Country Name\"]).sum()\n",
    "\n",
    "#join dataframes\n",
    "joined = pd.merge(df_grouped_new, df_pop_year_urban_grouped,  how='left', left_on=\"Country\", right_on=\"Country Name\")\n",
    "\n",
    "#joined = pd.merge(df_grouped_new, df_pop_year_urban_grouped,  how='left', left_index=True, right_index=True)\n",
    "\n",
    "joined_cutat_1mio = joined[joined[\"2016\"] > 1000000]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df_grouped_new is the obesity file\n",
    "\n",
    "#filter by top 25 countries\n",
    "\n",
    "#df_grouped_new\n",
    "\n",
    "#read in alex files\n",
    "df_toptwenty = pd.read_csv(path_to_files +\"top25.csv\")\n",
    "\n",
    "list_of_top_25 = list(df_toptwenty[\"Country\"].unique())\n",
    "\n",
    "\n",
    "df_obesity = df_grouped_new[df_grouped_new[\"Country\"].isin(list_of_top_25)]\n",
    "\n",
    "\n",
    "df_obesity[[\"Country\",\"Obesity (Prevalence of BMI>2SD)\"]].to_csv(path_to_files+\"top25_obesity_2016.csv\",index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Country Code</th>\n",
       "      <th>Category</th>\n",
       "      <th>2017</th>\n",
       "      <th>2018</th>\n",
       "      <th>2019</th>\n",
       "      <th>2020</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>529</th>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>ARE</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>535</th>\n",
       "      <td>United States</td>\n",
       "      <td>USA</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322</th>\n",
       "      <td>Malaysia</td>\n",
       "      <td>MYS</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>2.6</td>\n",
       "      <td>2.1</td>\n",
       "      <td>1.7</td>\n",
       "      <td>1.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>262</th>\n",
       "      <td>Italy</td>\n",
       "      <td>ITA</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>2.9</td>\n",
       "      <td>2.9</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211</th>\n",
       "      <td>Greece</td>\n",
       "      <td>GRC</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>4.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>3.1</td>\n",
       "      <td>3.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541</th>\n",
       "      <td>Uruguay</td>\n",
       "      <td>URY</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>2.7</td>\n",
       "      <td>2.9</td>\n",
       "      <td>3.2</td>\n",
       "      <td>3.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>Chile</td>\n",
       "      <td>CHL</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>3.4</td>\n",
       "      <td>3.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>3.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271</th>\n",
       "      <td>Jordan</td>\n",
       "      <td>JOR</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>15.8</td>\n",
       "      <td>14.9</td>\n",
       "      <td>14.2</td>\n",
       "      <td>14.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>Dominican Republic</td>\n",
       "      <td>DOM</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>21.2</td>\n",
       "      <td>18.1</td>\n",
       "      <td>17.1</td>\n",
       "      <td>18.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>340</th>\n",
       "      <td>Mexico</td>\n",
       "      <td>MEX</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>26.1</td>\n",
       "      <td>24.9</td>\n",
       "      <td>23.7</td>\n",
       "      <td>26.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>DZA</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>35.2</td>\n",
       "      <td>33.9</td>\n",
       "      <td>31.8</td>\n",
       "      <td>30.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>253</th>\n",
       "      <td>Iraq</td>\n",
       "      <td>IRQ</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>53.3</td>\n",
       "      <td>53.2</td>\n",
       "      <td>50.6</td>\n",
       "      <td>49.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>265</th>\n",
       "      <td>Jamaica</td>\n",
       "      <td>JAM</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>64.7</td>\n",
       "      <td>64.3</td>\n",
       "      <td>65.0</td>\n",
       "      <td>66.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>Egypt</td>\n",
       "      <td>EGY</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>76.2</td>\n",
       "      <td>78.5</td>\n",
       "      <td>75.9</td>\n",
       "      <td>72.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>ARG</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>11.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Bahrain</td>\n",
       "      <td>BHR</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>Kuwait</td>\n",
       "      <td>KWT</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>New Zealand</td>\n",
       "      <td>NZL</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>397</th>\n",
       "      <td>Oman</td>\n",
       "      <td>OMN</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421</th>\n",
       "      <td>Qatar</td>\n",
       "      <td>QAT</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>436</th>\n",
       "      <td>Saudi Arabia</td>\n",
       "      <td>SAU</td>\n",
       "      <td>Percent of the population who cannot afford a ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Country Name Country Code  \\\n",
       "529  United Arab Emirates          ARE   \n",
       "535         United States          USA   \n",
       "322              Malaysia          MYS   \n",
       "262                 Italy          ITA   \n",
       "211                Greece          GRC   \n",
       "541               Uruguay          URY   \n",
       "115                 Chile          CHL   \n",
       "271                Jordan          JOR   \n",
       "160    Dominican Republic          DOM   \n",
       "340                Mexico          MEX   \n",
       "4                 Algeria          DZA   \n",
       "253                  Iraq          IRQ   \n",
       "265               Jamaica          JAM   \n",
       "169                 Egypt          EGY   \n",
       "16              Argentina          ARG   \n",
       "37                Bahrain          BHR   \n",
       "283                Kuwait          KWT   \n",
       "376           New Zealand          NZL   \n",
       "397                  Oman          OMN   \n",
       "421                 Qatar          QAT   \n",
       "436          Saudi Arabia          SAU   \n",
       "\n",
       "                                              Category  2017  2018  2019  2020  \n",
       "529  Percent of the population who cannot afford a ...   0.0   0.0   0.0   0.0  \n",
       "535  Percent of the population who cannot afford a ...   2.0   1.7   1.5   1.5  \n",
       "322  Percent of the population who cannot afford a ...   2.6   2.1   1.7   1.9  \n",
       "262  Percent of the population who cannot afford a ...   2.9   2.9   2.8   2.9  \n",
       "211  Percent of the population who cannot afford a ...   4.3   2.7   3.1   3.2  \n",
       "541  Percent of the population who cannot afford a ...   2.7   2.9   3.2   3.6  \n",
       "115  Percent of the population who cannot afford a ...   3.4   3.3   3.3   3.8  \n",
       "271  Percent of the population who cannot afford a ...  15.8  14.9  14.2  14.9  \n",
       "160  Percent of the population who cannot afford a ...  21.2  18.1  17.1  18.3  \n",
       "340  Percent of the population who cannot afford a ...  26.1  24.9  23.7  26.3  \n",
       "4    Percent of the population who cannot afford a ...  35.2  33.9  31.8  30.2  \n",
       "253  Percent of the population who cannot afford a ...  53.3  53.2  50.6  49.6  \n",
       "265  Percent of the population who cannot afford a ...  64.7  64.3  65.0  66.2  \n",
       "169  Percent of the population who cannot afford a ...  76.2  78.5  75.9  72.9  \n",
       "16   Percent of the population who cannot afford a ...  11.0   NaN   NaN   NaN  \n",
       "37   Percent of the population who cannot afford a ...   NaN   NaN   NaN   NaN  \n",
       "283  Percent of the population who cannot afford a ...   NaN   NaN   NaN   NaN  \n",
       "376  Percent of the population who cannot afford a ...   NaN   NaN   NaN   NaN  \n",
       "397  Percent of the population who cannot afford a ...   NaN   NaN   NaN   NaN  \n",
       "421  Percent of the population who cannot afford a ...   NaN   NaN   NaN   NaN  \n",
       "436  Percent of the population who cannot afford a ...   NaN   NaN   NaN   NaN  "
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#healthy diet\n",
    "df_healthy = pd.read_excel(path_to_files +\"WorldBank_Healthy_Diet_Costs_(2017-2020).xlsx\",sheet_name=\"Data\")\n",
    "\n",
    "df_healthy_top = df_healthy[df_healthy[\"Country Name\"].isin(list_of_top_25)]\n",
    "\n",
    "df_healthy_top_sort = df_healthy_top.sort_values(\"2020\")\n",
    "\n",
    "\n",
    "#Percent of the population who cannot afford a healthy diet at 52percentage of of income\n",
    "df_healthy_percent = df_healthy_top_sort[df_healthy_top_sort[\"Category\"]==\"Percent of the population who cannot afford a healthy diet at 52percentage of of income\"]\n",
    "\n",
    "#df_healthy_percent = df_healthy_top_sort[df_healthy_top_sort[\"Category\"]==\"Cost of a healthy diet\"]\n",
    "\n",
    "#df_healthy_percent = df_healthy_top_sort[df_healthy_top_sort[\"Category\"]==\"Millions of people who cannot afford a healthy diet at 52percentage of of income\"]\n",
    "\n",
    "dfnew = df_healthy_percent.sort_values(\"2020\")\n",
    "\n",
    "dfnew\n",
    "\n",
    "#dfnew[[\"Country Name\",\"2020\"]].to_csv(path_to_files+\"scatheahlty_all.csv\",index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [],
   "source": [
    "#scatterplot data\n",
    "#read in both data files\n",
    "df_education = pd.read_csv(path_to_files +\"education_per_country_new.csv\")\n",
    "df_healthy_all = pd.read_csv(path_to_files +\"scatheahlty_all.csv\")\n",
    "df_obesityin2016 = pd.read_csv(path_to_files +\"top25_obesity_2016.csv\")\n",
    "\n",
    "#join dataframes\n",
    "joined_assumptions = pd.merge(df_education, df_healthy_all,  how='left', left_on=\"Country Name\", right_on=\"Country Name\")\n",
    "\n",
    "joined_assumptions_obesity = pd.merge(joined_assumptions, df_obesityin2016,  how='left', left_on=\"Country Name\", right_on=\"Country Name\")\n",
    "\n",
    "#join obesity \n",
    "joined_assumptions_obesity.to_csv(path_to_files+\"scatterplotdata.csv\",index=False)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Country</th>\n",
       "      <th>Obesity (Prevalence of BMI&gt;2SD)</th>\n",
       "      <th>Year</th>\n",
       "      <th>2016</th>\n",
       "      <th>Mean BMI children</th>\n",
       "      <th>CHANCE OF MEETING WHO 2025 TARGET</th>\n",
       "      <th>Predicted 2030:  % children with obesity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Kuwait</td>\n",
       "      <td>0.227656</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>3956862.0</td>\n",
       "      <td>21.479503</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.2675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>United States</td>\n",
       "      <td>0.213630</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>323071755.0</td>\n",
       "      <td>21.194650</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.2525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>0.190122</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>2654379.0</td>\n",
       "      <td>21.468789</td>\n",
       "      <td>0.14</td>\n",
       "      <td>0.2485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Egypt, Arab Rep.</td>\n",
       "      <td>0.173584</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>94447071.0</td>\n",
       "      <td>20.665752</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.2615</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Bahrain</td>\n",
       "      <td>0.169914</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>1425793.0</td>\n",
       "      <td>20.780222</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.2340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>Saudi Arabia</td>\n",
       "      <td>0.169027</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>32443443.0</td>\n",
       "      <td>20.096307</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.2435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>0.168048</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>43590368.0</td>\n",
       "      <td>20.227591</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.2360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>0.166023</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>9360975.0</td>\n",
       "      <td>21.310175</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.2385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>New Zealand</td>\n",
       "      <td>0.161938</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>4714100.0</td>\n",
       "      <td>20.989202</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.2160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>Chile</td>\n",
       "      <td>0.152833</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>18209072.0</td>\n",
       "      <td>21.728386</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.2230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>Dominican Republic</td>\n",
       "      <td>0.148748</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>10397738.0</td>\n",
       "      <td>19.484999</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.2485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>0.147949</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>123333379.0</td>\n",
       "      <td>20.426172</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.2145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>Oman</td>\n",
       "      <td>0.146783</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>4479217.0</td>\n",
       "      <td>20.049765</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.2295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>Lebanon</td>\n",
       "      <td>0.143922</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>6714281.0</td>\n",
       "      <td>20.569994</td>\n",
       "      <td>0.11</td>\n",
       "      <td>0.2040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>Libya</td>\n",
       "      <td>0.143173</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>6492160.0</td>\n",
       "      <td>20.017471</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.2125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>Iraq</td>\n",
       "      <td>0.142041</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>36610632.0</td>\n",
       "      <td>20.616868</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.2200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>Venezuela, RB</td>\n",
       "      <td>0.139865</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>29851249.0</td>\n",
       "      <td>20.344841</td>\n",
       "      <td>0.15</td>\n",
       "      <td>0.1930</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>Uruguay</td>\n",
       "      <td>0.138289</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>3424139.0</td>\n",
       "      <td>20.172377</td>\n",
       "      <td>0.12</td>\n",
       "      <td>0.1980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>Greece</td>\n",
       "      <td>0.136320</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>10775971.0</td>\n",
       "      <td>20.141525</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.1950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>Jamaica</td>\n",
       "      <td>0.132363</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>2906242.0</td>\n",
       "      <td>19.554466</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.2250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>20</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>0.131096</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>40551398.0</td>\n",
       "      <td>19.688620</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.2210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>Malaysia</td>\n",
       "      <td>0.128741</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>30684652.0</td>\n",
       "      <td>19.617569</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.2245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>22</td>\n",
       "      <td>Jordan</td>\n",
       "      <td>0.127163</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>9554286.0</td>\n",
       "      <td>19.124719</td>\n",
       "      <td>0.09</td>\n",
       "      <td>0.1890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>23</td>\n",
       "      <td>Italy</td>\n",
       "      <td>0.124486</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>60627498.0</td>\n",
       "      <td>19.656237</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.1705</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Unnamed: 0               Country  Obesity (Prevalence of BMI>2SD)    Year  \\\n",
       "0            0                Kuwait                         0.227656  2016.0   \n",
       "1            1         United States                         0.213630  2016.0   \n",
       "2            2                 Qatar                         0.190122  2016.0   \n",
       "3            3      Egypt, Arab Rep.                         0.173584  2016.0   \n",
       "4            4               Bahrain                         0.169914  2016.0   \n",
       "5            5          Saudi Arabia                         0.169027  2016.0   \n",
       "6            6             Argentina                         0.168048  2016.0   \n",
       "7            7  United Arab Emirates                         0.166023  2016.0   \n",
       "8            8           New Zealand                         0.161938  2016.0   \n",
       "9            9                 Chile                         0.152833  2016.0   \n",
       "10          10    Dominican Republic                         0.148748  2016.0   \n",
       "11          11                Mexico                         0.147949  2016.0   \n",
       "12          12                  Oman                         0.146783  2016.0   \n",
       "13          13               Lebanon                         0.143922  2016.0   \n",
       "14          14                 Libya                         0.143173  2016.0   \n",
       "15          15                  Iraq                         0.142041  2016.0   \n",
       "16          16         Venezuela, RB                         0.139865  2016.0   \n",
       "17          17               Uruguay                         0.138289  2016.0   \n",
       "18          18                Greece                         0.136320  2016.0   \n",
       "19          19               Jamaica                         0.132363  2016.0   \n",
       "20          20               Algeria                         0.131096  2016.0   \n",
       "21          21              Malaysia                         0.128741  2016.0   \n",
       "22          22                Jordan                         0.127163  2016.0   \n",
       "23          23                 Italy                         0.124486  2016.0   \n",
       "\n",
       "           2016  Mean BMI children  CHANCE OF MEETING WHO 2025 TARGET  \\\n",
       "0     3956862.0          21.479503                               0.17   \n",
       "1   323071755.0          21.194650                               0.17   \n",
       "2     2654379.0          21.468789                               0.14   \n",
       "3    94447071.0          20.665752                               0.02   \n",
       "4     1425793.0          20.780222                               0.08   \n",
       "5    32443443.0          20.096307                               0.04   \n",
       "6    43590368.0          20.227591                               0.10   \n",
       "7     9360975.0          21.310175                               0.07   \n",
       "8     4714100.0          20.989202                               0.08   \n",
       "9    18209072.0          21.728386                               0.07   \n",
       "10   10397738.0          19.484999                               0.02   \n",
       "11  123333379.0          20.426172                               0.04   \n",
       "12    4479217.0          20.049765                               0.03   \n",
       "13    6714281.0          20.569994                               0.11   \n",
       "14    6492160.0          20.017471                               0.07   \n",
       "15   36610632.0          20.616868                               0.04   \n",
       "16   29851249.0          20.344841                               0.15   \n",
       "17    3424139.0          20.172377                               0.12   \n",
       "18   10775971.0          20.141525                               0.00   \n",
       "19    2906242.0          19.554466                               0.02   \n",
       "20   40551398.0          19.688620                               0.02   \n",
       "21   30684652.0          19.617569                               0.01   \n",
       "22    9554286.0          19.124719                               0.09   \n",
       "23   60627498.0          19.656237                               0.00   \n",
       "\n",
       "    Predicted 2030:  % children with obesity  \n",
       "0                                     0.2675  \n",
       "1                                     0.2525  \n",
       "2                                     0.2485  \n",
       "3                                     0.2615  \n",
       "4                                     0.2340  \n",
       "5                                     0.2435  \n",
       "6                                     0.2360  \n",
       "7                                     0.2385  \n",
       "8                                     0.2160  \n",
       "9                                     0.2230  \n",
       "10                                    0.2485  \n",
       "11                                    0.2145  \n",
       "12                                    0.2295  \n",
       "13                                    0.2040  \n",
       "14                                    0.2125  \n",
       "15                                    0.2200  \n",
       "16                                    0.1930  \n",
       "17                                    0.1980  \n",
       "18                                    0.1950  \n",
       "19                                    0.2250  \n",
       "20                                    0.2210  \n",
       "21                                    0.2245  \n",
       "22                                    0.1890  \n",
       "23                                    0.1705  "
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#\n",
    "df = pd.read_csv(path_to_files +\"childhood_growth.csv\")\n",
    "\n",
    "#df[\"Hacked growth\"] = df[\"Predicted 2030: % children with obesity\"]-df[\"Obesity (Prevalence of BMI>2SD)\"]\n",
    "\n",
    "df"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.12 ('base')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "86a7bbd02cfac46480d17526df7ba8d6d0acada37cee107a1b10336a5c918a63"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
